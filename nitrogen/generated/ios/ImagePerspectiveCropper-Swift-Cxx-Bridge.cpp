///
/// ImagePerspectiveCropper-Swift-Cxx-Bridge.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "ImagePerspectiveCropper-Swift-Cxx-Bridge.hpp"

// Include C++ implementation defined types
#include "HybridImagePerspectiveCropperSpecSwift.hpp"
#include "ImagePerspectiveCropper-Swift-Cxx-Umbrella.hpp"
#include <NitroModules/HybridContext.hpp>

namespace margelo::nitro::customcrop::bridge::swift {

  // pragma MARK: std::shared_ptr<margelo::nitro::customcrop::HybridImagePerspectiveCropperSpec>
  std::shared_ptr<margelo::nitro::customcrop::HybridImagePerspectiveCropperSpec> create_std__shared_ptr_margelo__nitro__customcrop__HybridImagePerspectiveCropperSpec_(void* _Nonnull swiftUnsafePointer) {
    ImagePerspectiveCropper::HybridImagePerspectiveCropperSpecCxx swiftPart = ImagePerspectiveCropper::HybridImagePerspectiveCropperSpecCxxUnsafe::fromUnsafe(swiftUnsafePointer);
    return HybridContext::getOrCreate<margelo::nitro::customcrop::HybridImagePerspectiveCropperSpecSwift>(swiftPart);
  }
  void* _Nonnull get_std__shared_ptr_margelo__nitro__customcrop__HybridImagePerspectiveCropperSpec_(std__shared_ptr_margelo__nitro__customcrop__HybridImagePerspectiveCropperSpec_ cppType) {
    std::shared_ptr<margelo::nitro::customcrop::HybridImagePerspectiveCropperSpecSwift> swiftWrapper = std::dynamic_pointer_cast<margelo::nitro::customcrop::HybridImagePerspectiveCropperSpecSwift>(cppType);
  #ifdef NITRO_DEBUG
    if (swiftWrapper == nullptr) [[unlikely]] {
      throw std::runtime_error("Class \"HybridImagePerspectiveCropperSpec\" is not implemented in Swift!");
    }
  #endif
    ImagePerspectiveCropper::HybridImagePerspectiveCropperSpecCxx swiftPart = swiftWrapper->getSwiftPart();
    return ImagePerspectiveCropper::HybridImagePerspectiveCropperSpecCxxUnsafe::toUnsafe(swiftPart);
  }

} // namespace margelo::nitro::customcrop::bridge::swift
