///
/// JRectangle.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "Rectangle.hpp"

#include "JPoint.hpp"
#include "Point.hpp"

namespace margelo::nitro::customcrop {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ struct "Rectangle" and the the Kotlin data class "Rectangle".
   */
  struct JRectangle final: public jni::JavaClass<JRectangle> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/customcrop/Rectangle;";

  public:
    /**
     * Convert this Java/Kotlin-based struct to the C++ struct Rectangle by copying all values to C++.
     */
    [[maybe_unused]]
    Rectangle toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldTopLeft = clazz->getField<JPoint>("topLeft");
      jni::local_ref<JPoint> topLeft = this->getFieldValue(fieldTopLeft);
      static const auto fieldTopRight = clazz->getField<JPoint>("topRight");
      jni::local_ref<JPoint> topRight = this->getFieldValue(fieldTopRight);
      static const auto fieldBottomLeft = clazz->getField<JPoint>("bottomLeft");
      jni::local_ref<JPoint> bottomLeft = this->getFieldValue(fieldBottomLeft);
      static const auto fieldBottomRight = clazz->getField<JPoint>("bottomRight");
      jni::local_ref<JPoint> bottomRight = this->getFieldValue(fieldBottomRight);
      static const auto fieldWidth = clazz->getField<double>("width");
      double width = this->getFieldValue(fieldWidth);
      static const auto fieldHeight = clazz->getField<double>("height");
      double height = this->getFieldValue(fieldHeight);
      return Rectangle(
        topLeft->toCpp(),
        topRight->toCpp(),
        bottomLeft->toCpp(),
        bottomRight->toCpp(),
        width,
        height
      );
    }

  public:
    /**
     * Create a Java/Kotlin-based struct by copying all values from the given C++ struct to Java.
     */
    [[maybe_unused]]
    static jni::local_ref<JRectangle::javaobject> fromCpp(const Rectangle& value) {
      return newInstance(
        JPoint::fromCpp(value.topLeft),
        JPoint::fromCpp(value.topRight),
        JPoint::fromCpp(value.bottomLeft),
        JPoint::fromCpp(value.bottomRight),
        value.width,
        value.height
      );
    }
  };

} // namespace margelo::nitro::customcrop
